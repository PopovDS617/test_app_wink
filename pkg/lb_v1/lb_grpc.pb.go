// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: lb.proto

package lb_v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// LBV1Client is the client API for LBV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type LBV1Client interface {
	GetVideoURL(ctx context.Context, in *GetVideoURLRequest, opts ...grpc.CallOption) (*GetVideoURLResponse, error)
}

type lBV1Client struct {
	cc grpc.ClientConnInterface
}

func NewLBV1Client(cc grpc.ClientConnInterface) LBV1Client {
	return &lBV1Client{cc}
}

func (c *lBV1Client) GetVideoURL(ctx context.Context, in *GetVideoURLRequest, opts ...grpc.CallOption) (*GetVideoURLResponse, error) {
	out := new(GetVideoURLResponse)
	err := c.cc.Invoke(ctx, "/lb_v1.LB_v1/GetVideoURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LBV1Server is the server API for LBV1 service.
// All implementations must embed UnimplementedLBV1Server
// for forward compatibility
type LBV1Server interface {
	GetVideoURL(context.Context, *GetVideoURLRequest) (*GetVideoURLResponse, error)
	mustEmbedUnimplementedLBV1Server()
}

// UnimplementedLBV1Server must be embedded to have forward compatible implementations.
type UnimplementedLBV1Server struct {
}

func (UnimplementedLBV1Server) GetVideoURL(context.Context, *GetVideoURLRequest) (*GetVideoURLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideoURL not implemented")
}
func (UnimplementedLBV1Server) mustEmbedUnimplementedLBV1Server() {}

// UnsafeLBV1Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to LBV1Server will
// result in compilation errors.
type UnsafeLBV1Server interface {
	mustEmbedUnimplementedLBV1Server()
}

func RegisterLBV1Server(s grpc.ServiceRegistrar, srv LBV1Server) {
	s.RegisterService(&LBV1_ServiceDesc, srv)
}

func _LBV1_GetVideoURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVideoURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LBV1Server).GetVideoURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lb_v1.LB_v1/GetVideoURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LBV1Server).GetVideoURL(ctx, req.(*GetVideoURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// LBV1_ServiceDesc is the grpc.ServiceDesc for LBV1 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var LBV1_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "lb_v1.LB_v1",
	HandlerType: (*LBV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVideoURL",
			Handler:    _LBV1_GetVideoURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lb.proto",
}
